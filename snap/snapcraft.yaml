name: iot-example-graphical-snap  # you probably want to 'snapcraft register <name>'
version: git # just for humans, typically '1.2+git' or '1.3.2'
summary: IoT example using weston-calibrator # 79 char long summary
description: IoT example using weston-calibrator
confinement: strict
compression: lzo
grade: stable
base: core22

apps:
  iot-example-graphical-snap:
    command-chain: &_command-chain
      - bin/graphics-core22-wrapper
      - bin/wayland-launch
    command: &_command usr/bin/weston-calibrator
    plugs: &_plugs
      - opengl
      - wayland

  daemon:
    daemon: simple
    restart-delay: 3s
    restart-condition: always
    command-chain: *_command-chain
    command: *_command
    plugs: *_plugs

# This is one of four snippets that relate to providing the userspace graphics needed by your application.
# You can treat this as "magic" so long as you don't need to make changes.
# On the Mir website there's a lot more detail on [the graphics-core22 Snap interface](https://mir-server.io/docs/the-graphics-core22-snap-interface) and it's use.
plugs:
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22

environment:
  # Other, generally useful environment settings...
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_DATA_DIRS:   $SNAP/usr/local/share:$SNAP/usr/share
  # XKB config
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb

# The `layout` ensures that files can be found by applications where they are expected by the toolkit or application.
layout:
  # weston-calibrator
  /usr/share/weston-calibrator:
    bind: $SNAP/usr/share/weston-calibrator
parts:
  meson-deps:
    source: https://github.com/mesonbuild/meson.git
    source-tag: 1.3.1
    source-depth: 1
    plugin: nil
    build-packages:
      - python3-pip
      - ninja-build
    override-build: |
      pip install .

  wayland:
    source: https://gitlab.freedesktop.org/wayland/wayland.git
    source-tag: 1.22.0
    source-depth: 1
    plugin: meson
    build-packages:
      - libffi-dev
      - libexpat1-dev
    meson-parameters:
      - -Dtests=false
      - -Ddocumentation=false
      - -Ddtd_validation=false
    after:
      - meson-deps

  wayland-protocols:
    source: https://gitlab.freedesktop.org/wayland/wayland-protocols.git
    source-tag: 1.32
    source-depth: 1
    plugin: meson
    meson-parameters:
      - -Dtests=false
    after:
      - meson-deps

  weston-calibrator:
    source: https://gitlab.freedesktop.org/wayland/weston.git
    source-tag: 13.0.0
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dbackend-drm-screencast-vaapi=false
      - -Dbackend-headless=false
      - -Dbackend-pipewire=false
      - -Dbackend-rdp=false
      - -Dscreenshare=false
      - -Dbackend-vnc=false
      - -Dbackend-x11=false
      - -Dxwayland=false
      - -Dsystemd=false
      - -Dremoting=false
      - -Dpipewire=false
      - -Dshell-desktop=false
      - -Dshell-fullscreen=false
      - -Dshell-ivi=false
      - -Dshell-kiosk=false
      - -Dcolor-management-lcms=false
      - -Dimage-jpeg=false
      - -Dimage-webp=false
      - -Dtools=calibrator
      - -Ddemo-clients=false
      - -Dsimple-clients=
      - -Dresize-pool=false
      - -Dwcap-decode=false
      - -Dtest-junit-xml=false
    build-packages:
      - meson
      - cmake
      - libcairo2-dev
      - libdrm-dev
      - libegl-dev
      - libgbm-dev
      - libgles-dev
      - libinput-dev
      - libpango1.0-dev
      - libseat-dev
      - libsystemd-dev
      - libwayland-dev
      - libxkbcommon-dev
    stage-packages:
      - libcairo2
      - libdrm2
      - libegl1-mesa
      - libevdev2
      - libgbm1
      - libgles2
      - libglvnd0
      - libgudev-1.0-0
      - libinput10
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libseat1
      - libsystemd0
      - libwayland-egl1
      - libwayland-cursor0 
      - libxkbcommon0
    override-prime: |
      craftctl default
      cd "$CRAFT_PRIME/usr/"
      rm -rf include local sbin
      cd "$CRAFT_PRIME/usr/share/"
      rm -rf weston libweston* wayland-sessions
      cd "$CRAFT_PRIME/usr/bin/"
      rm -rf weston seatd-launch
    after:
      - wayland
      - wayland-protocols

  # Some utility scripts for setting up the Wayland environment
  setup:
    plugin: dump
    source: wayland-launch
    override-build: |
      # The plugs needed to run Wayland. (wayland-launch checks them, setup.sh connects them)
      # You may add further plugs here if you want these options
      PLUGS="opengl wayland graphics-core22"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/setup.sh
      craftctl default
    stage-packages:
      - inotify-tools

  graphics-core22:
    after:
      - weston-calibrator
      - setup
    source: https://github.com/MirServer/graphics-core22.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/graphics-core22-cleanup mesa-core22 nvidia-core22
      cd "$CRAFT_PRIME/usr/share/"
      rm -rf bug drirc.d glvnd libdrm lintian man
      rm -rf applications apport bash-completion dbus-1 doc-base doc gtk-doc\
             help pkgconfig libthai metainfo themes thumbnailers xml
    prime:
      - bin/graphics-core22-wrapper

architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64
